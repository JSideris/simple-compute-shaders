2025-10-02 v0.3.0
- Wrapped pass and dispatch args in an optional props object for future expansion.
- Added vastly more types in the ShaderBuffer class including matrix variants, atomic types, and more.
- Fixed internal typing issues with the ShaderBuffer wrapper class.
- Added better validation on null/undefined buffers being passed to shaders.
- Optimized render shader to avoid recreating the texture view each frame.
- Optimized render shader by not writing canvas size buffers unless they need to be.

2025-09-26 v0.2.1
- Added support for complex struct data buffers.

2025-09-25 v0.2.0
- Added support for binding layouts.
- Added mechanism for buffer swapping.
- Changed binding layout/group/binding interface, which may break older code.

2025-03-02 v0.1.12

- Added support for obfuscated binding mappings from the wgsl-plus utility.

2025-02-28 v0.1.10

- Added support for signed integer buffers.

2025-02-19 v0.1.9

- Made @webgpu/types a core dependency to fix potential build issues in some environments.

2025-02-06 v0.1.8

- Added Game of Life example.
- Added better error messages for when a buffer is created when Shader hasn't been initialized.
- Changed the default names of the canvas size buffers to snake case.
- Added optional `execution_count` and `time` uniforms to all shaders.
- All shader pipelines now accept arrays of strings for their code. Useful for modularization.

2024-12-26 v0.1.6

- Added configuration options for canvas size buffers.

2024-12-02 v0.1.5

- Improved bitonic sort example.
- Add links to readme.
- Minor improvements to documentation and exapmples.

2024-12-02 v0.1.1

- First stable beta version.
- Made reading from buffers element-based rather than (inconsistently) byte-based.
- Rename `pass` to `dispatch` for compute shaders.
- Removed `pass` and `dispatch` function args.
- Added bitonic sort example.
- Improved documentation.